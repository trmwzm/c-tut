<html>
<head>
  <title>/home/pogrady/work/headers/FFTW_GSL_wrap/FFTW_GSL_wrap.h</title>
</head>
<body bgcolor="#ffffff" text="#000000">
<pre>
<font color="#444444">/*
 *  Paul's GSL wrappers for the Fastest Fourier Transform in the West library
 *
 *	Author: Paul O'Grady
 *	www.hamilton.ie/paul
 *
 *
 *   This program is free software; you can redistribute it and/or modify
 *   it under the terms of the GNU General Public License as published by
 *   the Free Software Foundation; either version 2 of the License, or
 *   (at your option) any later version.
 *
 *   This program is distributed in the hope that it will be useful,
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *   GNU General Public License for more details.
 *
 *   You should have received a copy of the GNU General Public License
 *   along with this program; if not, write to the Free Software
 *   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
 *
 */</font>
<font color="0000ff"><strong>#include <font color="#008000">&lt;gsl/gsl_vector.h&gt;</font><font color="#444444">	/*GNU Scientific Library*/</font></strong></font>
<font color="0000ff"><strong>#include <font color="#008000">&lt;gsl/gsl_matrix.h&gt;</font></strong></font>
<font color="0000ff"><strong>#include <font color="#008000">&lt;rfftw.h&gt;</font>	<font color="#444444">	/*Fastest FFT in the WEST */</font></strong></font>

<strong>void</strong> <font color="#2040a0">FFTTransform</font><font color="4444FF">(</font><font color="#2040a0">gsl_matrix</font> <font color="4444FF">*</font> , <font color="#2040a0">gsl_matrix</font> <font color="4444FF">*</font>, <strong>int</strong><font color="4444FF">)</font><font color="4444FF">;</font>
<strong>void</strong> <font color="#2040a0">FFTInverseTransform</font><font color="4444FF">(</font><font color="#2040a0">gsl_matrix</font> <font color="4444FF">*</font>, <font color="#2040a0">gsl_matrix</font> <font color="4444FF">*</font>,  <strong>int</strong><font color="4444FF">)</font><font color="4444FF">;</font>
<strong>void</strong> <font color="#2040a0">FFTTransformVector</font><font color="4444FF">(</font><font color="#2040a0">gsl_vector</font> <font color="4444FF">*</font> , <font color="#2040a0">gsl_vector</font> <font color="4444FF">*</font>, <strong>int</strong><font color="4444FF">)</font><font color="4444FF">;</font>
<strong>void</strong> <font color="#2040a0">FFTInverseTransformVector</font><font color="4444FF">(</font><font color="#2040a0">gsl_vector</font> <font color="4444FF">*</font>, <font color="#2040a0">gsl_vector</font> <font color="4444FF">*</font>,  <strong>int</strong><font color="4444FF">)</font><font color="4444FF">;</font>

<strong>void</strong> <font color="#2040a0">hamming</font><font color="4444FF">(</font><strong>int</strong> , <font color="#2040a0">gsl_vector</font> <font color="4444FF">*</font><font color="4444FF">)</font><font color="4444FF">;</font>
<strong>void</strong> <font color="#2040a0">hammingWindowing</font><font color="4444FF">(</font><strong>int</strong>, <font color="#2040a0">gsl_matrix</font> <font color="4444FF">*</font><font color="4444FF">)</font><font color="4444FF">;</font>
<strong>void</strong> <font color="#2040a0">hammingInverseWindowing</font><font color="4444FF">(</font><strong>int</strong>, <font color="#2040a0">gsl_matrix</font> <font color="4444FF">*</font><font color="4444FF">)</font><font color="4444FF">;</font>
<strong>void</strong> <font color="#2040a0">frameAdvance</font><font color="4444FF">(</font><strong>int</strong>, <strong>int</strong>, <font color="#2040a0">gsl_matrix</font> <font color="4444FF">*</font>, <font color="#2040a0">gsl_matrix</font> <font color="4444FF">*</font><font color="4444FF">)</font><font color="4444FF">;</font>
<strong>void</strong> <font color="#2040a0">frameAdvanceReverse</font><font color="4444FF">(</font><strong>int</strong>, <strong>int</strong>, <font color="#2040a0">gsl_matrix</font> <font color="4444FF">*</font>, <font color="#2040a0">gsl_matrix</font> <font color="4444FF">*</font><font color="4444FF">)</font><font color="4444FF">;</font>
<strong>void</strong> <font color="#2040a0">spectrogram</font><font color="4444FF">(</font><strong>int</strong>, <strong>int</strong>, <font color="#2040a0">gsl_matrix</font> <font color="4444FF">*</font>, <font color="#2040a0">gsl_matrix</font> <font color="4444FF">*</font><font color="4444FF">)</font><font color="4444FF">;</font>
<strong>void</strong> <font color="#2040a0">inverseSpectrogram</font><font color="4444FF">(</font><strong>int</strong>, <strong>int</strong>, <font color="#2040a0">gsl_matrix</font> <font color="4444FF">*</font>, <font color="#2040a0">gsl_matrix</font> <font color="4444FF">*</font><font color="4444FF">)</font><font color="4444FF">;</font>


<font color="#444444">/* Perform FFT on the rows of input matrix*/</font>
<strong>void</strong> <font color="#2040a0">FFTTransform</font><font color="4444FF">(</font><font color="#2040a0">gsl_matrix</font> <font color="4444FF">*</font> <font color="#2040a0">input</font>, <font color="#2040a0">gsl_matrix</font> <font color="4444FF">*</font> <font color="#2040a0">output</font>,
		    <strong>int</strong> <font color="#2040a0">fftPoints</font><font color="4444FF">)</font>
<font color="4444FF"><strong>{</strong></font>
  <strong>int</strong> <font color="#2040a0">rows</font> <font color="4444FF">=</font> <font color="#2040a0">input</font><font color="4444FF">-</font><font color="4444FF">&gt;</font><font color="#2040a0">size1</font><font color="4444FF">;</font>
  <strong>int</strong> <font color="#2040a0">length</font> <font color="4444FF">=</font> <font color="#2040a0">input</font><font color="4444FF">-</font><font color="4444FF">&gt;</font><font color="#2040a0">size2</font><font color="4444FF">;</font>
  <font color="#2040a0">rfftw_plan</font> <font color="#2040a0">p1</font><font color="4444FF">;</font>
  <font color="#2040a0">gsl_vector</font> <font color="4444FF">*</font> <font color="#2040a0">tempVector</font> <font color="4444FF">=</font> <font color="#2040a0">gsl_vector_alloc</font><font color="4444FF">(</font><font color="#2040a0">length</font><font color="4444FF">)</font><font color="4444FF">;</font>
  <font color="#2040a0">gsl_vector</font> <font color="4444FF">*</font> <font color="#2040a0">transformed</font> <font color="4444FF">=</font> <font color="#2040a0">gsl_vector_alloc</font><font color="4444FF">(</font><font color="#2040a0">length</font><font color="4444FF">)</font><font color="4444FF">;</font>
  <strong>int</strong> <font color="#2040a0">noOfFFTOperations</font>, <font color="#2040a0">count</font><font color="4444FF">;</font>

  <font color="#2040a0">noOfFFTOperations</font> <font color="4444FF">=</font> <font color="4444FF">(</font><strong>int</strong><font color="4444FF">)</font><font color="4444FF">(</font><font color="#2040a0">length</font>/<font color="#2040a0">fftPoints</font><font color="4444FF">)</font><font color="4444FF">;</font>

  <font color="#444444">/*printf(&quot;rows = %d, cols = %d, noOfFFTOperations =%d\n&quot;,rows,length,noOfFFTOperations);*/</font>

  <font color="#444444">/* Transform data */</font>
  <font color="#2040a0">p1</font> <font color="4444FF">=</font> <font color="#2040a0">rfftw_create_plan</font><font color="4444FF">(</font><font color="#2040a0">fftPoints</font>, <font color="#2040a0">FFTW_REAL_TO_COMPLEX</font>, <font color="#2040a0">FFTW_ESTIMATE</font><font color="4444FF">)</font><font color="4444FF">;</font>
   <strong>for</strong><font color="4444FF">(</font><font color="#2040a0">count</font> <font color="4444FF">=</font> <font color="#FF0000">0</font><font color="4444FF">;</font> <font color="#2040a0">count</font> <font color="4444FF">&lt;</font> <font color="#2040a0">rows</font><font color="4444FF">;</font> <font color="#2040a0">count</font><font color="4444FF">+</font><font color="4444FF">+</font><font color="4444FF">)</font>
     <font color="4444FF"><strong>{</strong></font>

       <font color="#2040a0">gsl_matrix_get_row</font><font color="4444FF">(</font><font color="#2040a0">tempVector</font>,<font color="#2040a0">input</font>,<font color="#2040a0">count</font><font color="4444FF">)</font><font color="4444FF">;</font>
       //<font color="#2040a0">gsl_vector_reverse</font> <font color="4444FF">(</font><font color="#2040a0">tempVector</font><font color="4444FF">)</font><font color="4444FF">;</font>
       <font color="#2040a0">rfftw</font><font color="4444FF">(</font><font color="#2040a0">p1</font>, <font color="#2040a0">noOfFFTOperations</font>, <font color="#2040a0">tempVector</font><font color="4444FF">-</font><font color="4444FF">&gt;</font><font color="#2040a0">data</font>, <font color="#FF0000">1</font>, <font color="#2040a0">fftPoints</font>, <font color="#2040a0">transformed</font><font color="4444FF">-</font><font color="4444FF">&gt;</font><font color="#2040a0">data</font>, <font color="#FF0000">1</font>, <font color="#2040a0">fftPoints</font><font color="4444FF">)</font><font color="4444FF">;</font>
       //<font color="#2040a0">rfftw_one</font><font color="4444FF">(</font><font color="#2040a0">p1</font>, <font color="#2040a0">tempVector</font><font color="4444FF">-</font><font color="4444FF">&gt;</font><font color="#2040a0">data</font>, <font color="#2040a0">transformed</font><font color="4444FF">-</font><font color="4444FF">&gt;</font><font color="#2040a0">data</font><font color="4444FF">)</font><font color="4444FF">;</font>
       //<font color="#2040a0">gsl_vector_reverse</font> <font color="4444FF">(</font><font color="#2040a0">transformed</font><font color="4444FF">)</font><font color="4444FF">;</font>
       <font color="#2040a0">gsl_matrix_set_row</font><font color="4444FF">(</font><font color="#2040a0">output</font>,<font color="#2040a0">count</font>,<font color="#2040a0">transformed</font><font color="4444FF">)</font><font color="4444FF">;</font>

     <font color="4444FF"><strong>}</strong></font>

  <font color="#444444">/* Free up allocated memory */</font>
  <font color="#2040a0">rfftw_destroy_plan</font><font color="4444FF">(</font><font color="#2040a0">p1</font><font color="4444FF">)</font><font color="4444FF">;</font>
  <font color="#2040a0">gsl_vector_free</font><font color="4444FF">(</font><font color="#2040a0">tempVector</font><font color="4444FF">)</font><font color="4444FF">;</font>
  <font color="#2040a0">gsl_vector_free</font><font color="4444FF">(</font><font color="#2040a0">transformed</font><font color="4444FF">)</font><font color="4444FF">;</font>

<font color="4444FF"><strong>}</strong></font>

<font color="#444444">/* Perform IFFT on the rows of input matrix */</font>
<strong>void</strong> <font color="#2040a0">FFTInverseTransform</font><font color="4444FF">(</font><font color="#2040a0">gsl_matrix</font> <font color="4444FF">*</font> <font color="#2040a0">input</font>, <font color="#2040a0">gsl_matrix</font> <font color="4444FF">*</font> <font color="#2040a0">output</font>,
			  <strong>int</strong> <font color="#2040a0">fftPoints</font><font color="4444FF">)</font>
<font color="4444FF"><strong>{</strong></font>
  <strong>int</strong> <font color="#2040a0">length</font> <font color="4444FF">=</font> <font color="#2040a0">input</font><font color="4444FF">-</font><font color="4444FF">&gt;</font><font color="#2040a0">size2</font><font color="4444FF">;</font>
  <strong>int</strong> <font color="#2040a0">cols</font> <font color="4444FF">=</font> <font color="#2040a0">input</font><font color="4444FF">-</font><font color="4444FF">&gt;</font><font color="#2040a0">size1</font><font color="4444FF">;</font>
  <font color="#2040a0">rfftw_plan</font> <font color="#2040a0">p2</font><font color="4444FF">;</font>
  <font color="#2040a0">gsl_vector</font> <font color="4444FF">*</font> <font color="#2040a0">tempVector</font> <font color="4444FF">=</font> <font color="#2040a0">gsl_vector_alloc</font><font color="4444FF">(</font><font color="#2040a0">length</font><font color="4444FF">)</font><font color="4444FF">;</font>
  <font color="#2040a0">gsl_vector</font> <font color="4444FF">*</font> <font color="#2040a0">transformed</font> <font color="4444FF">=</font> <font color="#2040a0">gsl_vector_alloc</font><font color="4444FF">(</font><font color="#2040a0">length</font><font color="4444FF">)</font><font color="4444FF">;</font>
  <strong>int</strong> <font color="#2040a0">noOfFFTOperations</font>, <font color="#2040a0">count</font><font color="4444FF">;</font>

  <font color="#2040a0">noOfFFTOperations</font> <font color="4444FF">=</font> <font color="4444FF">(</font><strong>int</strong><font color="4444FF">)</font><font color="4444FF">(</font><font color="#2040a0">length</font>/<font color="#2040a0">fftPoints</font><font color="4444FF">)</font><font color="4444FF">;</font>
  <font color="#2040a0">p2</font> <font color="4444FF">=</font> <font color="#2040a0">rfftw_create_plan</font><font color="4444FF">(</font><font color="#2040a0">fftPoints</font>, <font color="#2040a0">FFTW_COMPLEX_TO_REAL</font>, <font color="#2040a0">FFTW_ESTIMATE</font><font color="4444FF">)</font><font color="4444FF">;</font>

  <strong>for</strong><font color="4444FF">(</font><font color="#2040a0">count</font> <font color="4444FF">=</font> <font color="#FF0000">0</font><font color="4444FF">;</font> <font color="#2040a0">count</font> <font color="4444FF">&lt;</font> <font color="#2040a0">cols</font><font color="4444FF">;</font> <font color="#2040a0">count</font><font color="4444FF">+</font><font color="4444FF">+</font><font color="4444FF">)</font>
  <font color="4444FF"><strong>{</strong></font>
     <font color="#2040a0">gsl_matrix_get_row</font><font color="4444FF">(</font><font color="#2040a0">tempVector</font>,<font color="#2040a0">input</font>,<font color="#2040a0">count</font><font color="4444FF">)</font><font color="4444FF">;</font>
     <font color="#2040a0">rfftw</font><font color="4444FF">(</font><font color="#2040a0">p2</font>, <font color="#2040a0">noOfFFTOperations</font>, <font color="#2040a0">tempVector</font><font color="4444FF">-</font><font color="4444FF">&gt;</font><font color="#2040a0">data</font>, <font color="#FF0000">1</font>, <font color="#2040a0">fftPoints</font>, <font color="#2040a0">transformed</font><font color="4444FF">-</font><font color="4444FF">&gt;</font><font color="#2040a0">data</font>, <font color="#FF0000">1</font>, <font color="#2040a0">fftPoints</font><font color="4444FF">)</font><font color="4444FF">;</font> 
     <font color="#444444">/* Need to rescale coefficients */</font>
     <font color="#2040a0">gsl_vector_scale</font><font color="4444FF">(</font><font color="#2040a0">transformed</font>,<font color="4444FF">(</font><strong>double</strong><font color="4444FF">)</font><font color="4444FF">(</font><font color="#FF0000">1.0</font>/<font color="#2040a0">fftPoints</font><font color="4444FF">)</font><font color="4444FF">)</font><font color="4444FF">;</font>
     <font color="#2040a0">gsl_matrix_set_row</font><font color="4444FF">(</font><font color="#2040a0">output</font>,<font color="#2040a0">count</font>, <font color="#2040a0">transformed</font><font color="4444FF">)</font><font color="4444FF">;</font>
  <font color="4444FF"><strong>}</strong></font>

  <font color="#444444">/* Free up allocated memory */</font>
  <font color="#2040a0">rfftw_destroy_plan</font><font color="4444FF">(</font><font color="#2040a0">p2</font><font color="4444FF">)</font><font color="4444FF">;</font>
  <font color="#2040a0">gsl_vector_free</font><font color="4444FF">(</font><font color="#2040a0">tempVector</font><font color="4444FF">)</font><font color="4444FF">;</font>
  <font color="#2040a0">gsl_vector_free</font><font color="4444FF">(</font><font color="#2040a0">transformed</font><font color="4444FF">)</font><font color="4444FF">;</font>
<font color="4444FF"><strong>}</strong></font>

<font color="#444444">/* Perform N-point FFT on input vector*/</font>
<strong>void</strong> <font color="#2040a0">FFTTransformVector</font><font color="4444FF">(</font><font color="#2040a0">gsl_vector</font> <font color="4444FF">*</font> <font color="#2040a0">input</font>, <font color="#2040a0">gsl_vector</font> <font color="4444FF">*</font> <font color="#2040a0">output</font>,
		    <strong>int</strong> <font color="#2040a0">fftPoints</font><font color="4444FF">)</font>
<font color="4444FF"><strong>{</strong></font>
  <strong>int</strong> <font color="#2040a0">length</font> <font color="4444FF">=</font> <font color="#2040a0">input</font><font color="4444FF">-</font><font color="4444FF">&gt;</font><font color="#2040a0">size</font><font color="4444FF">;</font>
  <font color="#2040a0">rfftw_plan</font> <font color="#2040a0">p1</font><font color="4444FF">;</font>
  <strong>int</strong> <font color="#2040a0">noOfFFTOperations</font><font color="4444FF">;</font>

  <font color="#2040a0">noOfFFTOperations</font> <font color="4444FF">=</font> <font color="4444FF">(</font><strong>int</strong><font color="4444FF">)</font><font color="4444FF">(</font><font color="#2040a0">length</font>/<font color="#2040a0">fftPoints</font><font color="4444FF">)</font><font color="4444FF">;</font>

  <font color="#444444">/* Transform data */</font>
  <font color="#2040a0">p1</font> <font color="4444FF">=</font> <font color="#2040a0">rfftw_create_plan</font><font color="4444FF">(</font><font color="#2040a0">fftPoints</font>, <font color="#2040a0">FFTW_REAL_TO_COMPLEX</font>, <font color="#2040a0">FFTW_ESTIMATE</font><font color="4444FF">)</font><font color="4444FF">;</font>
  <font color="#2040a0">rfftw</font><font color="4444FF">(</font><font color="#2040a0">p1</font>, <font color="#2040a0">noOfFFTOperations</font>, <font color="#2040a0">input</font><font color="4444FF">-</font><font color="4444FF">&gt;</font><font color="#2040a0">data</font>, <font color="#FF0000">1</font>, <font color="#2040a0">fftPoints</font>, <font color="#2040a0">output</font><font color="4444FF">-</font><font color="4444FF">&gt;</font><font color="#2040a0">data</font>, <font color="#FF0000">1</font>, <font color="#2040a0">fftPoints</font><font color="4444FF">)</font><font color="4444FF">;</font>

  <font color="#444444">/* Free up allocated memory */</font>
  <font color="#2040a0">rfftw_destroy_plan</font><font color="4444FF">(</font><font color="#2040a0">p1</font><font color="4444FF">)</font><font color="4444FF">;</font>

<font color="4444FF"><strong>}</strong></font>

<font color="#444444">/* Perform N-point FFT on input vector*/</font>
<strong>void</strong> <font color="#2040a0">FFTInverseTransformVector</font><font color="4444FF">(</font><font color="#2040a0">gsl_vector</font> <font color="4444FF">*</font> <font color="#2040a0">input</font>, <font color="#2040a0">gsl_vector</font> <font color="4444FF">*</font> <font color="#2040a0">output</font>,
		    <strong>int</strong> <font color="#2040a0">fftPoints</font><font color="4444FF">)</font>
<font color="4444FF"><strong>{</strong></font>
  <strong>int</strong> <font color="#2040a0">length</font> <font color="4444FF">=</font> <font color="#2040a0">input</font><font color="4444FF">-</font><font color="4444FF">&gt;</font><font color="#2040a0">size</font><font color="4444FF">;</font>
  <font color="#2040a0">rfftw_plan</font> <font color="#2040a0">p2</font><font color="4444FF">;</font>
  <strong>int</strong> <font color="#2040a0">noOfFFTOperations</font><font color="4444FF">;</font>

  <font color="#2040a0">noOfFFTOperations</font> <font color="4444FF">=</font> <font color="4444FF">(</font><strong>int</strong><font color="4444FF">)</font><font color="4444FF">(</font><font color="#2040a0">length</font>/<font color="#2040a0">fftPoints</font><font color="4444FF">)</font><font color="4444FF">;</font>

  <font color="#444444">/* Transform data */</font>
  <font color="#2040a0">p2</font> <font color="4444FF">=</font> <font color="#2040a0">rfftw_create_plan</font><font color="4444FF">(</font><font color="#2040a0">fftPoints</font>, <font color="#2040a0">FFTW_COMPLEX_TO_REAL</font>, <font color="#2040a0">FFTW_ESTIMATE</font><font color="4444FF">)</font><font color="4444FF">;</font>
  <font color="#2040a0">rfftw</font><font color="4444FF">(</font><font color="#2040a0">p2</font>, <font color="#2040a0">noOfFFTOperations</font>, <font color="#2040a0">input</font><font color="4444FF">-</font><font color="4444FF">&gt;</font><font color="#2040a0">data</font>, <font color="#FF0000">1</font>, <font color="#2040a0">fftPoints</font>, <font color="#2040a0">output</font><font color="4444FF">-</font><font color="4444FF">&gt;</font><font color="#2040a0">data</font>, <font color="#FF0000">1</font>, <font color="#2040a0">fftPoints</font><font color="4444FF">)</font><font color="4444FF">;</font>

  <font color="#444444">/* Need to rescale coefficients */</font>
  <font color="#2040a0">gsl_vector_scale</font><font color="4444FF">(</font><font color="#2040a0">output</font>,<font color="4444FF">(</font><strong>double</strong><font color="4444FF">)</font><font color="4444FF">(</font><font color="#FF0000">1.0</font>/<font color="#2040a0">fftPoints</font><font color="4444FF">)</font><font color="4444FF">)</font><font color="4444FF">;</font>

  <font color="#444444">/* Free up allocated memory */</font>
  <font color="#2040a0">rfftw_destroy_plan</font><font color="4444FF">(</font><font color="#2040a0">p2</font><font color="4444FF">)</font><font color="4444FF">;</font>

<font color="4444FF"><strong>}</strong></font>



<font color="#444444">/* Create n-point Hamming window */</font>
<strong>void</strong> <font color="#2040a0">hamming</font><font color="4444FF">(</font><strong>int</strong> <font color="#2040a0">n</font>, <font color="#2040a0">gsl_vector</font> <font color="4444FF">*</font> <font color="#2040a0">output</font><font color="4444FF">)</font>
<font color="4444FF"><strong>{</strong></font>

  <strong>int</strong> <font color="#2040a0">m</font><font color="4444FF">;</font>
  <strong>int</strong> <font color="#2040a0">count</font><font color="4444FF">;</font>

  <strong>if</strong> <font color="4444FF">(</font><font color="#2040a0">n</font><font color="4444FF">%</font><font color="#FF0000">2</font> <font color="4444FF">=</font><font color="4444FF">=</font> <font color="#FF0000">0</font><font color="4444FF">)</font>
    <font color="4444FF"><strong>{</strong></font>
      <font color="#444444">/* Even length window */</font>
      <font color="#2040a0">m</font><font color="4444FF">=</font><font color="#2040a0">n</font>/<font color="#FF0000">2</font><font color="4444FF">;</font>
    <font color="4444FF"><strong>}</strong></font>
  <strong>else</strong>
    <font color="4444FF"><strong>{</strong></font>
      <font color="#444444">/*  Odd length window */</font>
      <font color="#2040a0">m</font> <font color="4444FF">=</font> <font color="4444FF">(</font><font color="#2040a0">n</font><font color="4444FF">+</font><font color="#FF0000">1</font><font color="4444FF">)</font>/<font color="#FF0000">2</font><font color="4444FF">;</font>
    <font color="4444FF"><strong>}</strong></font>

  <font color="#444444">/* First half of window */</font>
  <strong>for</strong> <font color="4444FF">(</font><font color="#2040a0">count</font> <font color="4444FF">=</font> <font color="#FF0000">0</font><font color="4444FF">;</font> <font color="#2040a0">count</font> <font color="4444FF">&lt;</font><font color="4444FF">=</font> <font color="4444FF">(</font><font color="#2040a0">m</font><font color="4444FF">-</font><font color="#FF0000">1</font><font color="4444FF">)</font><font color="4444FF">;</font> <font color="#2040a0">count</font><font color="4444FF">+</font><font color="4444FF">+</font><font color="4444FF">)</font>
    <font color="4444FF"><strong>{</strong></font>
      <font color="#2040a0">output</font><font color="4444FF">-</font><font color="4444FF">&gt;</font><font color="#2040a0">data</font><font color="4444FF">[</font><font color="#2040a0">count</font><font color="4444FF">]</font> <font color="4444FF">=</font> <font color="4444FF">(</font><font color="#FF0000">54.0</font> <font color="4444FF">-</font> <font color="#FF0000">46.0</font><font color="4444FF">*</font><font color="#2040a0">cos</font><font color="4444FF">(</font><font color="#FF0000">2.0</font><font color="4444FF">*</font><font color="#2040a0">M_PI</font><font color="4444FF">*</font><font color="4444FF">(</font><font color="#2040a0">count</font><font color="4444FF">)</font>/<font color="4444FF">(</font><font color="#2040a0">n</font><font color="4444FF">-</font><font color="#FF0000">1</font><font color="4444FF">)</font><font color="4444FF">)</font><font color="4444FF">)</font>/<font color="#FF0000">100.0</font><font color="4444FF">;</font>
    <font color="4444FF"><strong>}</strong></font>


  <font color="#444444">/* Second half of window */</font>
  <strong>for</strong> <font color="4444FF">(</font><font color="#2040a0">count</font> <font color="4444FF">=</font> <font color="#FF0000">0</font><font color="4444FF">;</font> <font color="#2040a0">count</font> <font color="4444FF">&lt;</font><font color="4444FF">=</font> <font color="4444FF">(</font><font color="#2040a0">m</font><font color="4444FF">-</font><font color="#FF0000">1</font><font color="4444FF">)</font><font color="4444FF">;</font> <font color="#2040a0">count</font><font color="4444FF">+</font><font color="4444FF">+</font><font color="4444FF">)</font>
    <font color="4444FF"><strong>{</strong></font>
      <strong>if</strong> <font color="4444FF">(</font><font color="#2040a0">n</font><font color="4444FF">%</font><font color="#FF0000">2</font> <font color="4444FF">=</font><font color="4444FF">=</font> <font color="#FF0000">0</font><font color="4444FF">)</font>
	<font color="4444FF"><strong>{</strong></font>
	  <font color="#2040a0">output</font><font color="4444FF">-</font><font color="4444FF">&gt;</font><font color="#2040a0">data</font><font color="4444FF">[</font><font color="#2040a0">count</font><font color="4444FF">+</font><font color="4444FF">(</font><font color="#2040a0">m</font><font color="4444FF">)</font><font color="4444FF">]</font> <font color="4444FF">=</font> <font color="#2040a0">output</font><font color="4444FF">-</font><font color="4444FF">&gt;</font><font color="#2040a0">data</font><font color="4444FF">[</font><font color="4444FF">(</font><font color="#2040a0">m</font><font color="4444FF">-</font><font color="#FF0000">1</font><font color="4444FF">)</font><font color="4444FF">-</font><font color="#2040a0">count</font><font color="4444FF">]</font><font color="4444FF">;</font>
	<font color="4444FF"><strong>}</strong></font>
      <strong>else</strong>
	<font color="4444FF"><strong>{</strong></font>
	  <font color="#2040a0">output</font><font color="4444FF">-</font><font color="4444FF">&gt;</font><font color="#2040a0">data</font><font color="4444FF">[</font><font color="#2040a0">count</font><font color="4444FF">+</font><font color="4444FF">(</font><font color="#2040a0">m</font><font color="4444FF">-</font><font color="#FF0000">1</font><font color="4444FF">)</font><font color="4444FF">]</font> <font color="4444FF">=</font> <font color="#2040a0">output</font><font color="4444FF">-</font><font color="4444FF">&gt;</font><font color="#2040a0">data</font><font color="4444FF">[</font><font color="4444FF">(</font><font color="#2040a0">m</font><font color="4444FF">-</font><font color="#FF0000">1</font><font color="4444FF">)</font><font color="4444FF">-</font><font color="#2040a0">count</font><font color="4444FF">]</font><font color="4444FF">;</font>
	<font color="4444FF"><strong>}</strong></font>

    <font color="4444FF"><strong>}</strong></font>

<font color="4444FF"><strong>}</strong></font>


<font color="#444444">/* Window the rows of the data */</font>
<strong>void</strong> <font color="#2040a0">hammingWindowing</font><font color="4444FF">(</font><strong>int</strong> <font color="#2040a0">n</font>, <font color="#2040a0">gsl_matrix</font> <font color="4444FF">*</font> <font color="#2040a0">input</font><font color="4444FF">)</font>
<font color="4444FF"><strong>{</strong></font>
  <strong>int</strong> <font color="#2040a0">rows</font> <font color="4444FF">=</font> <font color="#2040a0">input</font><font color="4444FF">-</font><font color="4444FF">&gt;</font><font color="#2040a0">size1</font><font color="4444FF">;</font>
  <strong>int</strong> <font color="#2040a0">length</font> <font color="4444FF">=</font> <font color="#2040a0">input</font><font color="4444FF">-</font><font color="4444FF">&gt;</font><font color="#2040a0">size2</font><font color="4444FF">;</font>
  <strong>int</strong> <font color="#2040a0">count</font>, <font color="#2040a0">count2</font><font color="4444FF">;</font>

  <font color="#2040a0">gsl_vector</font> <font color="4444FF">*</font> <font color="#2040a0">window</font> <font color="4444FF">=</font> <font color="#2040a0">gsl_vector_alloc</font><font color="4444FF">(</font><font color="#2040a0">n</font><font color="4444FF">)</font><font color="4444FF">;</font>
  <font color="#2040a0">gsl_vector</font> <font color="4444FF">*</font> <font color="#2040a0">tempVector</font> <font color="4444FF">=</font> <font color="#2040a0">gsl_vector_alloc</font><font color="4444FF">(</font><font color="#2040a0">length</font><font color="4444FF">)</font><font color="4444FF">;</font>

  <font color="#444444">/* Create Hamming Window */</font>
  <font color="#2040a0">hamming</font><font color="4444FF">(</font><font color="#2040a0">n</font>,<font color="#2040a0">window</font><font color="4444FF">)</font><font color="4444FF">;</font>

  <font color="#444444">/* Window the rows of the input matrix */</font>
  <strong>for</strong><font color="4444FF">(</font><font color="#2040a0">count</font> <font color="4444FF">=</font> <font color="#FF0000">0</font><font color="4444FF">;</font> <font color="#2040a0">count</font> <font color="4444FF">&lt;</font> <font color="#2040a0">rows</font><font color="4444FF">;</font> <font color="#2040a0">count</font><font color="4444FF">+</font><font color="4444FF">+</font><font color="4444FF">)</font>
    <font color="4444FF"><strong>{</strong></font>

      <font color="#2040a0">gsl_matrix_get_row</font><font color="4444FF">(</font><font color="#2040a0">tempVector</font>,<font color="#2040a0">input</font>,<font color="#2040a0">count</font><font color="4444FF">)</font><font color="4444FF">;</font>
	<strong>for</strong><font color="4444FF">(</font><font color="#2040a0">count2</font> <font color="4444FF">=</font> <font color="#FF0000">0</font><font color="4444FF">;</font> <font color="#2040a0">count2</font> <font color="4444FF">&lt;</font><font color="#2040a0">length</font><font color="4444FF">;</font> <font color="#2040a0">count2</font><font color="4444FF">+</font><font color="4444FF">+</font><font color="4444FF">)</font>
	  <font color="4444FF"><strong>{</strong></font>
	    <font color="#2040a0">tempVector</font><font color="4444FF">-</font><font color="4444FF">&gt;</font><font color="#2040a0">data</font><font color="4444FF">[</font><font color="#2040a0">count2</font><font color="4444FF">]</font> <font color="4444FF">=</font> <font color="#2040a0">tempVector</font><font color="4444FF">-</font><font color="4444FF">&gt;</font><font color="#2040a0">data</font><font color="4444FF">[</font><font color="#2040a0">count2</font><font color="4444FF">]</font> <font color="4444FF">*</font>
	      <font color="#2040a0">window</font><font color="4444FF">-</font><font color="4444FF">&gt;</font><font color="#2040a0">data</font><font color="4444FF">[</font><font color="#2040a0">count2</font><font color="4444FF">%</font><font color="#2040a0">n</font><font color="4444FF">]</font><font color="4444FF">;</font>
	  <font color="4444FF"><strong>}</strong></font>
      <font color="#2040a0">gsl_matrix_set_row</font><font color="4444FF">(</font><font color="#2040a0">input</font>,<font color="#2040a0">count</font>,<font color="#2040a0">tempVector</font><font color="4444FF">)</font><font color="4444FF">;</font>

    <font color="4444FF"><strong>}</strong></font>

  <font color="#444444">/* Free up allocated memory */</font>
  <font color="#2040a0">gsl_vector_free</font><font color="4444FF">(</font><font color="#2040a0">tempVector</font><font color="4444FF">)</font><font color="4444FF">;</font>
  <font color="#2040a0">gsl_vector_free</font><font color="4444FF">(</font><font color="#2040a0">window</font><font color="4444FF">)</font><font color="4444FF">;</font>

<font color="4444FF"><strong>}</strong></font>

<font color="#444444">/* Window the rows of the data */</font>
<strong>void</strong> <font color="#2040a0">hammingInverseWindowing</font><font color="4444FF">(</font><strong>int</strong> <font color="#2040a0">n</font>, <font color="#2040a0">gsl_matrix</font> <font color="4444FF">*</font> <font color="#2040a0">input</font><font color="4444FF">)</font>
<font color="4444FF"><strong>{</strong></font>
  <strong>int</strong> <font color="#2040a0">rows</font> <font color="4444FF">=</font> <font color="#2040a0">input</font><font color="4444FF">-</font><font color="4444FF">&gt;</font><font color="#2040a0">size1</font><font color="4444FF">;</font>
  <strong>int</strong> <font color="#2040a0">length</font> <font color="4444FF">=</font> <font color="#2040a0">input</font><font color="4444FF">-</font><font color="4444FF">&gt;</font><font color="#2040a0">size2</font><font color="4444FF">;</font>
  <strong>int</strong> <font color="#2040a0">count</font>, <font color="#2040a0">count2</font><font color="4444FF">;</font>

  <font color="#2040a0">gsl_vector</font> <font color="4444FF">*</font> <font color="#2040a0">window</font> <font color="4444FF">=</font> <font color="#2040a0">gsl_vector_alloc</font><font color="4444FF">(</font><font color="#2040a0">n</font><font color="4444FF">)</font><font color="4444FF">;</font>
  <font color="#2040a0">gsl_vector</font> <font color="4444FF">*</font> <font color="#2040a0">tempVector</font> <font color="4444FF">=</font> <font color="#2040a0">gsl_vector_alloc</font><font color="4444FF">(</font><font color="#2040a0">length</font><font color="4444FF">)</font><font color="4444FF">;</font>

  <font color="#444444">/* Create Hamming Window */</font>
  <font color="#2040a0">hamming</font><font color="4444FF">(</font><font color="#2040a0">n</font>,<font color="#2040a0">window</font><font color="4444FF">)</font><font color="4444FF">;</font>

  <font color="#444444">/* Window the rows of the input matrix */</font>
  <strong>for</strong><font color="4444FF">(</font><font color="#2040a0">count</font> <font color="4444FF">=</font> <font color="#FF0000">0</font><font color="4444FF">;</font> <font color="#2040a0">count</font> <font color="4444FF">&lt;</font> <font color="#2040a0">rows</font><font color="4444FF">;</font> <font color="#2040a0">count</font><font color="4444FF">+</font><font color="4444FF">+</font><font color="4444FF">)</font>
    <font color="4444FF"><strong>{</strong></font>

      <font color="#2040a0">gsl_matrix_get_row</font><font color="4444FF">(</font><font color="#2040a0">tempVector</font>,<font color="#2040a0">input</font>,<font color="#2040a0">count</font><font color="4444FF">)</font><font color="4444FF">;</font>
	<strong>for</strong><font color="4444FF">(</font><font color="#2040a0">count2</font> <font color="4444FF">=</font> <font color="#FF0000">0</font><font color="4444FF">;</font> <font color="#2040a0">count2</font> <font color="4444FF">&lt;</font><font color="#2040a0">length</font><font color="4444FF">;</font> <font color="#2040a0">count2</font><font color="4444FF">+</font><font color="4444FF">+</font><font color="4444FF">)</font>
	  <font color="4444FF"><strong>{</strong></font>
	    <font color="#2040a0">tempVector</font><font color="4444FF">-</font><font color="4444FF">&gt;</font><font color="#2040a0">data</font><font color="4444FF">[</font><font color="#2040a0">count2</font><font color="4444FF">]</font> <font color="4444FF">=</font> <font color="#2040a0">tempVector</font><font color="4444FF">-</font><font color="4444FF">&gt;</font><font color="#2040a0">data</font><font color="4444FF">[</font><font color="#2040a0">count2</font><font color="4444FF">]</font> <font color="4444FF">*</font>
	      <font color="4444FF">(</font><font color="#FF0000">1.0</font>/<font color="#2040a0">window</font><font color="4444FF">-</font><font color="4444FF">&gt;</font><font color="#2040a0">data</font><font color="4444FF">[</font><font color="#2040a0">count2</font><font color="4444FF">%</font><font color="#2040a0">n</font><font color="4444FF">]</font><font color="4444FF">)</font><font color="4444FF">;</font>
	    //<font color="#2040a0">printf</font><font color="4444FF">(</font><font color="#008000">&quot;&lt;%d&gt;&quot;</font>,<font color="4444FF">(</font><font color="#2040a0">count2</font><font color="4444FF">%</font><font color="#2040a0">n</font><font color="4444FF">)</font><font color="4444FF">)</font><font color="4444FF">;</font>
	  <font color="4444FF"><strong>}</strong></font>
      <font color="#2040a0">gsl_matrix_set_row</font><font color="4444FF">(</font><font color="#2040a0">input</font>,<font color="#2040a0">count</font>,<font color="#2040a0">tempVector</font><font color="4444FF">)</font><font color="4444FF">;</font>

    <font color="4444FF"><strong>}</strong></font>

  <font color="#444444">/* Free up allocated memory */</font>
  <font color="#2040a0">gsl_vector_free</font><font color="4444FF">(</font><font color="#2040a0">tempVector</font><font color="4444FF">)</font><font color="4444FF">;</font>
  <font color="#2040a0">gsl_vector_free</font><font color="4444FF">(</font><font color="#2040a0">window</font><font color="4444FF">)</font><font color="4444FF">;</font>

<font color="4444FF"><strong>}</strong></font>


<font color="#444444">/* Frame rows of the data */</font>
<strong>void</strong> <font color="#2040a0">frameAdvance</font><font color="4444FF">(</font><strong>int</strong> <font color="#2040a0">n</font>, <strong>int</strong> <font color="#2040a0">advance</font>, <font color="#2040a0">gsl_matrix</font> <font color="4444FF">*</font> <font color="#2040a0">input</font>, <font color="#2040a0">gsl_matrix</font> <font color="4444FF">*</font> <font color="#2040a0">output</font><font color="4444FF">)</font>
<font color="4444FF"><strong>{</strong></font>

  <font color="#444444">/*

   Notes:
	- Input matrix contains mixtures in its rows
	- Data in rows is framed and placed in a row vector
  */</font>

  <strong>int</strong> <font color="#2040a0">rows</font> <font color="4444FF">=</font> <font color="#2040a0">input</font><font color="4444FF">-</font><font color="4444FF">&gt;</font><font color="#2040a0">size1</font><font color="4444FF">;</font>
  <strong>int</strong> <font color="#2040a0">inputLength</font> <font color="4444FF">=</font> <font color="#2040a0">input</font><font color="4444FF">-</font><font color="4444FF">&gt;</font><font color="#2040a0">size2</font><font color="4444FF">;</font>
  <strong>int</strong> <font color="#2040a0">outputLength</font> <font color="4444FF">=</font> <font color="#2040a0">output</font><font color="4444FF">-</font><font color="4444FF">&gt;</font><font color="#2040a0">size2</font><font color="4444FF">;</font>
  <strong>int</strong> <font color="#2040a0">count</font>, <font color="#2040a0">frameCount</font>, <font color="#2040a0">frameValue</font>, <font color="#2040a0">frameStart</font>, <font color="#2040a0">signalValue</font> <font color="4444FF">;</font>
  <strong>int</strong> <font color="#2040a0">frames</font><font color="4444FF">;</font>

  <font color="#2040a0">gsl_vector</font> <font color="4444FF">*</font> <font color="#2040a0">inputRow</font> <font color="4444FF">=</font> <font color="#2040a0">gsl_vector_alloc</font><font color="4444FF">(</font><font color="#2040a0">inputLength</font><font color="4444FF">)</font><font color="4444FF">;</font>
  <font color="#2040a0">gsl_vector</font> <font color="4444FF">*</font> <font color="#2040a0">outputRow</font> <font color="4444FF">=</font> <font color="#2040a0">gsl_vector_alloc</font><font color="4444FF">(</font><font color="#2040a0">outputLength</font><font color="4444FF">)</font><font color="4444FF">;</font>

  <font color="#2040a0">frames</font> <font color="4444FF">=</font> <font color="#2040a0">outputLength</font>/<font color="#2040a0">n</font><font color="4444FF">;</font>

  <font color="#444444">/* Advance the frame window, and frame row of the input matrix */</font>
  <strong>for</strong><font color="4444FF">(</font><font color="#2040a0">count</font> <font color="4444FF">=</font> <font color="#FF0000">0</font><font color="4444FF">;</font> <font color="#2040a0">count</font> <font color="4444FF">&lt;</font> <font color="#2040a0">rows</font><font color="4444FF">;</font> <font color="#2040a0">count</font><font color="4444FF">+</font><font color="4444FF">+</font><font color="4444FF">)</font>
    <font color="4444FF"><strong>{</strong></font>

      <font color="#2040a0">gsl_matrix_get_row</font><font color="4444FF">(</font><font color="#2040a0">inputRow</font>,<font color="#2040a0">input</font>,<font color="#2040a0">count</font><font color="4444FF">)</font><font color="4444FF">;</font>

      <font color="#444444">/*for(frameCount = 0; frameCount &lt; frames; frameCount++)*/</font>
      <font color="#444444">/* frames-(n/advance-1) :Avoid writing beyond allocated memory */</font>
      <strong>for</strong><font color="4444FF">(</font><font color="#2040a0">frameCount</font> <font color="4444FF">=</font> <font color="#FF0000">0</font><font color="4444FF">;</font> <font color="#2040a0">frameCount</font> <font color="4444FF">&lt;</font> <font color="#2040a0">frames</font><font color="4444FF">-</font><font color="4444FF">(</font><font color="#2040a0">n</font>/<font color="#2040a0">advance</font><font color="4444FF">-</font><font color="#FF0000">1</font><font color="4444FF">)</font><font color="4444FF">;</font> <font color="#2040a0">frameCount</font><font color="4444FF">+</font><font color="4444FF">+</font><font color="4444FF">)</font> <font color="#444444">/* breaks when params not ^2 */</font>
	<font color="4444FF"><strong>{</strong></font>
	  <font color="#2040a0">frameStart</font> <font color="4444FF">=</font> <font color="4444FF">(</font><font color="4444FF">(</font><font color="#2040a0">frameCount</font><font color="4444FF">)</font><font color="4444FF">*</font><font color="#2040a0">advance</font><font color="4444FF">)</font><font color="4444FF">;</font>
	  <strong>for</strong><font color="4444FF">(</font><font color="#2040a0">frameValue</font> <font color="4444FF">=</font> <font color="#FF0000">0</font><font color="4444FF">;</font> <font color="#2040a0">frameValue</font> <font color="4444FF">&lt;</font> <font color="#2040a0">n</font><font color="4444FF">;</font> <font color="#2040a0">frameValue</font><font color="4444FF">+</font><font color="4444FF">+</font><font color="4444FF">)</font>
	    <font color="4444FF"><strong>{</strong></font>
	      <font color="#2040a0">signalValue</font> <font color="4444FF">=</font> <font color="#2040a0">frameStart</font><font color="4444FF">+</font><font color="#2040a0">frameValue</font><font color="4444FF">;</font>
	      <font color="#444444">/*printf(&quot;signalValue %d&quot;,signalValue);*/</font>
	      <font color="#2040a0">outputRow</font><font color="4444FF">-</font><font color="4444FF">&gt;</font><font color="#2040a0">data</font><font color="4444FF">[</font><font color="4444FF">(</font><font color="4444FF">(</font><font color="#2040a0">frameCount</font><font color="4444FF">*</font><font color="#2040a0">n</font><font color="4444FF">)</font><font color="4444FF">+</font><font color="#2040a0">frameValue</font><font color="4444FF">)</font><font color="4444FF">]</font> <font color="4444FF">=</font> <font color="#2040a0">inputRow</font><font color="4444FF">-</font><font color="4444FF">&gt;</font><font color="#2040a0">data</font><font color="4444FF">[</font><font color="#2040a0">signalValue</font><font color="4444FF">]</font><font color="4444FF">;</font>
	    <font color="4444FF"><strong>}</strong></font>
	<font color="4444FF"><strong>}</strong></font>

      <font color="#2040a0">gsl_matrix_set_row</font><font color="4444FF">(</font><font color="#2040a0">output</font>,<font color="#2040a0">count</font>,<font color="#2040a0">outputRow</font><font color="4444FF">)</font><font color="4444FF">;</font>

    <font color="4444FF"><strong>}</strong></font>


  <font color="#444444">/* Free up allocated memory */</font>
  <font color="#2040a0">gsl_vector_free</font><font color="4444FF">(</font><font color="#2040a0">outputRow</font><font color="4444FF">)</font><font color="4444FF">;</font>
  <font color="#2040a0">gsl_vector_free</font><font color="4444FF">(</font><font color="#2040a0">inputRow</font><font color="4444FF">)</font><font color="4444FF">;</font>

<font color="4444FF"><strong>}</strong></font>

<font color="#444444">/* Reverse the frame windowing proceedure for each row of matrix */</font>
<strong>void</strong> <font color="#2040a0">frameAdvanceReverse</font><font color="4444FF">(</font><strong>int</strong> <font color="#2040a0">n</font>, <strong>int</strong> <font color="#2040a0">advance</font>, <font color="#2040a0">gsl_matrix</font> <font color="4444FF">*</font> <font color="#2040a0">input</font>, <font color="#2040a0">gsl_matrix</font> <font color="4444FF">*</font> <font color="#2040a0">output</font><font color="4444FF">)</font>
<font color="4444FF"><strong>{</strong></font>

  <strong>int</strong> <font color="#2040a0">rows</font> <font color="4444FF">=</font> <font color="#2040a0">input</font><font color="4444FF">-</font><font color="4444FF">&gt;</font><font color="#2040a0">size1</font><font color="4444FF">;</font>
  <strong>int</strong> <font color="#2040a0">inputLength</font> <font color="4444FF">=</font> <font color="#2040a0">input</font><font color="4444FF">-</font><font color="4444FF">&gt;</font><font color="#2040a0">size2</font><font color="4444FF">;</font>
  <strong>int</strong> <font color="#2040a0">outputLength</font> <font color="4444FF">=</font> <font color="#2040a0">output</font><font color="4444FF">-</font><font color="4444FF">&gt;</font><font color="#2040a0">size2</font><font color="4444FF">;</font>
  <strong>int</strong> <font color="#2040a0">count</font>, <font color="#2040a0">frameCount</font>, <font color="#2040a0">frameValue</font>, <font color="#2040a0">frameStart</font>, <font color="#2040a0">signalValue</font> <font color="4444FF">;</font>
  <strong>int</strong> <font color="#2040a0">frames</font><font color="4444FF">;</font>

  <font color="#2040a0">gsl_vector</font> <font color="4444FF">*</font> <font color="#2040a0">inputRow</font> <font color="4444FF">=</font> <font color="#2040a0">gsl_vector_alloc</font><font color="4444FF">(</font><font color="#2040a0">inputLength</font><font color="4444FF">)</font><font color="4444FF">;</font>
  <font color="#2040a0">gsl_vector</font> <font color="4444FF">*</font> <font color="#2040a0">outputRow</font> <font color="4444FF">=</font> <font color="#2040a0">gsl_vector_alloc</font><font color="4444FF">(</font><font color="#2040a0">outputLength</font><font color="4444FF">)</font><font color="4444FF">;</font>

  <font color="#2040a0">gsl_vector_set_zero</font><font color="4444FF">(</font><font color="#2040a0">outputRow</font><font color="4444FF">)</font><font color="4444FF">;</font>


  <font color="#2040a0">frames</font> <font color="4444FF">=</font> <font color="#2040a0">inputLength</font>/<font color="#2040a0">n</font><font color="4444FF">;</font>

  <font color="#444444">/* Reverse the advance in the rows of the input matrix */</font>
  <strong>for</strong><font color="4444FF">(</font><font color="#2040a0">count</font> <font color="4444FF">=</font> <font color="#FF0000">0</font><font color="4444FF">;</font> <font color="#2040a0">count</font> <font color="4444FF">&lt;</font> <font color="#2040a0">rows</font><font color="4444FF">;</font> <font color="#2040a0">count</font><font color="4444FF">+</font><font color="4444FF">+</font><font color="4444FF">)</font>
    <font color="4444FF"><strong>{</strong></font>

      <font color="#2040a0">gsl_matrix_get_row</font><font color="4444FF">(</font><font color="#2040a0">inputRow</font>,<font color="#2040a0">input</font>,<font color="#2040a0">count</font><font color="4444FF">)</font><font color="4444FF">;</font>
 
      <font color="#444444">/*for(frameCount = 0; frameCount &lt; frames-1; frameCount++) */</font>
      <font color="#444444">/* frames-(n/advance-1) :Avoid writing beyond allocated memory */</font>
      <strong>for</strong><font color="4444FF">(</font><font color="#2040a0">frameCount</font> <font color="4444FF">=</font> <font color="#FF0000">0</font><font color="4444FF">;</font> <font color="#2040a0">frameCount</font> <font color="4444FF">&lt;</font> <font color="#2040a0">frames</font><font color="4444FF">-</font><font color="4444FF">(</font><font color="#2040a0">n</font>/<font color="#2040a0">advance</font><font color="4444FF">-</font><font color="#FF0000">1</font><font color="4444FF">)</font><font color="4444FF">;</font> <font color="#2040a0">frameCount</font><font color="4444FF">+</font><font color="4444FF">+</font><font color="4444FF">)</font> <font color="#444444">/* breaks when params not ^2 */</font>
	<font color="4444FF"><strong>{</strong></font>

	  <font color="#2040a0">frameStart</font> <font color="4444FF">=</font> <font color="4444FF">(</font><font color="4444FF">(</font><font color="#2040a0">frameCount</font><font color="4444FF">)</font><font color="4444FF">*</font><font color="#2040a0">advance</font><font color="4444FF">)</font><font color="4444FF">;</font>
	  <strong>for</strong><font color="4444FF">(</font><font color="#2040a0">frameValue</font> <font color="4444FF">=</font> <font color="#FF0000">0</font><font color="4444FF">;</font> <font color="#2040a0">frameValue</font> <font color="4444FF">&lt;</font> <font color="#2040a0">n</font><font color="4444FF">;</font> <font color="#2040a0">frameValue</font><font color="4444FF">+</font><font color="4444FF">+</font><font color="4444FF">)</font>
	    <font color="4444FF"><strong>{</strong></font>

	      <font color="#2040a0">signalValue</font> <font color="4444FF">=</font> <font color="#2040a0">frameStart</font><font color="4444FF">+</font><font color="#2040a0">frameValue</font><font color="4444FF">;</font>
	      <font color="#444444">/*printf(&quot;signalValue %d&quot;,signalValue);*/</font>
	      <font color="#444444">/*outputRow-&gt;data[signalValue] = inputRow-&gt;data[((frameCount*n)+frameValue)];*/</font>
	      <font color="#444444">/* Overlap (advance) and add */</font>
	      <font color="#2040a0">outputRow</font><font color="4444FF">-</font><font color="4444FF">&gt;</font><font color="#2040a0">data</font><font color="4444FF">[</font><font color="#2040a0">signalValue</font><font color="4444FF">]</font> <font color="4444FF">=</font> <font color="#2040a0">outputRow</font><font color="4444FF">-</font><font color="4444FF">&gt;</font><font color="#2040a0">data</font><font color="4444FF">[</font><font color="#2040a0">signalValue</font><font color="4444FF">]</font> <font color="4444FF">+</font> <font color="#2040a0">inputRow</font><font color="4444FF">-</font><font color="4444FF">&gt;</font><font color="#2040a0">data</font><font color="4444FF">[</font><font color="4444FF">(</font><font color="4444FF">(</font><font color="#2040a0">frameCount</font><font color="4444FF">*</font><font color="#2040a0">n</font><font color="4444FF">)</font><font color="4444FF">+</font><font color="#2040a0">frameValue</font><font color="4444FF">)</font><font color="4444FF">]</font><font color="4444FF">;</font>

	    <font color="4444FF"><strong>}</strong></font>
	<font color="4444FF"><strong>}</strong></font>

      <font color="#2040a0">gsl_matrix_set_row</font><font color="4444FF">(</font><font color="#2040a0">output</font>,<font color="#2040a0">count</font>,<font color="#2040a0">outputRow</font><font color="4444FF">)</font><font color="4444FF">;</font>

      <font color="#444444">/* Clear outputRow for advance and add */</font>
      <font color="#2040a0">gsl_vector_set_zero</font><font color="4444FF">(</font><font color="#2040a0">outputRow</font><font color="4444FF">)</font><font color="4444FF">;</font>

    <font color="4444FF"><strong>}</strong></font>


  <font color="#444444">/* Rescale output matrix after advance and add operation */</font>
  <font color="#2040a0">gsl_matrix_scale</font><font color="4444FF">(</font><font color="#2040a0">output</font>,<font color="#FF0000">1.0</font>/<font color="4444FF">(</font><font color="4444FF">(</font><strong>double</strong><font color="4444FF">)</font><font color="#2040a0">n</font>/<font color="4444FF">(</font><strong>double</strong><font color="4444FF">)</font><font color="#2040a0">advance</font><font color="4444FF">)</font><font color="4444FF">)</font><font color="4444FF">;</font>


  <font color="#444444">/* Free up allocated memory */</font>
  <font color="#2040a0">gsl_vector_free</font><font color="4444FF">(</font><font color="#2040a0">inputRow</font><font color="4444FF">)</font><font color="4444FF">;</font> 
  <font color="#2040a0">gsl_vector_free</font><font color="4444FF">(</font><font color="#2040a0">outputRow</font><font color="4444FF">)</font><font color="4444FF">;</font>

<font color="4444FF"><strong>}</strong></font>

<font color="#444444">/* Spectrogram */</font>
<strong>void</strong> <font color="#2040a0">spectrogram</font><font color="4444FF">(</font><strong>int</strong> <font color="#2040a0">N</font> , <strong>int</strong> <font color="#2040a0">advance</font> , <font color="#2040a0">gsl_matrix</font> <font color="4444FF">*</font> <font color="#2040a0">input</font> , <font color="#2040a0">gsl_matrix</font> <font color="4444FF">*</font> <font color="#2040a0">output</font><font color="4444FF">)</font>
<font color="4444FF"><strong>{</strong></font>
  <strong>int</strong> <font color="#2040a0">rows</font> <font color="4444FF">=</font> <font color="#2040a0">input</font><font color="4444FF">-</font><font color="4444FF">&gt;</font><font color="#2040a0">size1</font><font color="4444FF">;</font>
  <strong>int</strong> <font color="#2040a0">outputLength</font> <font color="4444FF">=</font> <font color="#2040a0">output</font><font color="4444FF">-</font><font color="4444FF">&gt;</font><font color="#2040a0">size2</font><font color="4444FF">;</font>

  <font color="#2040a0">gsl_matrix</font> <font color="4444FF">*</font> <font color="#2040a0">tempMatrix</font> <font color="4444FF">=</font> <font color="#2040a0">gsl_matrix_alloc</font><font color="4444FF">(</font><font color="#2040a0">rows</font>,<font color="#2040a0">outputLength</font><font color="4444FF">)</font><font color="4444FF">;</font>

  <font color="#444444">/* Perform advance in the rows of the input matrix */</font>
  <font color="#2040a0">frameAdvance</font><font color="4444FF">(</font><font color="#2040a0">N</font>,<font color="#2040a0">advance</font>,<font color="#2040a0">input</font>,<font color="#2040a0">tempMatrix</font><font color="4444FF">)</font><font color="4444FF">;</font>

  <font color="#444444">/* Perform windowing on the frames contained in the rows */</font>
  <font color="#2040a0">hammingWindowing</font><font color="4444FF">(</font><font color="#2040a0">N</font>,<font color="#2040a0">tempMatrix</font><font color="4444FF">)</font><font color="4444FF">;</font>

  <font color="#444444">/* FFT data */</font>
  <font color="#2040a0">FFTTransform</font><font color="4444FF">(</font><font color="#2040a0">tempMatrix</font>,<font color="#2040a0">output</font>,<font color="#2040a0">N</font><font color="4444FF">)</font><font color="4444FF">;</font>

  <font color="#444444">/* Free up allocated memory */</font>
  <font color="#2040a0">gsl_matrix_free</font><font color="4444FF">(</font><font color="#2040a0">tempMatrix</font><font color="4444FF">)</font><font color="4444FF">;</font>

<font color="4444FF"><strong>}</strong></font>

<font color="#444444">/* Inverse spectrogram */</font>
<strong>void</strong> <font color="#2040a0">inverseSpectrogram</font><font color="4444FF">(</font><strong>int</strong> <font color="#2040a0">N</font>, <strong>int</strong> <font color="#2040a0">advance</font> , <font color="#2040a0">gsl_matrix</font> <font color="4444FF">*</font> <font color="#2040a0">input</font> , <font color="#2040a0">gsl_matrix</font> <font color="4444FF">*</font> <font color="#2040a0">output</font><font color="4444FF">)</font>
<font color="4444FF"><strong>{</strong></font>
  <strong>int</strong> <font color="#2040a0">rows</font> <font color="4444FF">=</font> <font color="#2040a0">input</font><font color="4444FF">-</font><font color="4444FF">&gt;</font><font color="#2040a0">size1</font><font color="4444FF">;</font>
  <strong>int</strong> <font color="#2040a0">inputLength</font> <font color="4444FF">=</font> <font color="#2040a0">input</font><font color="4444FF">-</font><font color="4444FF">&gt;</font><font color="#2040a0">size2</font><font color="4444FF">;</font>

  <font color="#2040a0">gsl_matrix</font> <font color="4444FF">*</font> <font color="#2040a0">tempMatrix</font> <font color="4444FF">=</font> <font color="#2040a0">gsl_matrix_alloc</font><font color="4444FF">(</font><font color="#2040a0">rows</font>,<font color="#2040a0">inputLength</font><font color="4444FF">)</font><font color="4444FF">;</font>
  <font color="#2040a0">gsl_matrix</font> <font color="4444FF">*</font> <font color="#2040a0">winWeights</font> <font color="4444FF">=</font> <font color="#2040a0">gsl_matrix_alloc</font><font color="4444FF">(</font><font color="#2040a0">rows</font>,<font color="#2040a0">output</font><font color="4444FF">-</font><font color="4444FF">&gt;</font><font color="#2040a0">size2</font><font color="4444FF">)</font><font color="4444FF">;</font>

  <font color="#444444">/* FFT data */</font>
  <font color="#2040a0">FFTInverseTransform</font><font color="4444FF">(</font><font color="#2040a0">input</font>,<font color="#2040a0">tempMatrix</font>,<font color="#2040a0">N</font><font color="4444FF">)</font><font color="4444FF">;</font>

  <font color="#444444">/* Perform advance (overlap) and add */</font>
  <font color="#2040a0">frameAdvanceReverse</font><font color="4444FF">(</font><font color="#2040a0">N</font>,<font color="#2040a0">advance</font>,<font color="#2040a0">tempMatrix</font>,<font color="#2040a0">output</font><font color="4444FF">)</font><font color="4444FF">;</font>

  <font color="#444444">/* Perform inverse windowing: Add overlapping windows then devide */</font>
  <font color="#2040a0">gsl_matrix_set_all</font><font color="4444FF">(</font><font color="#2040a0">tempMatrix</font>,<font color="#FF0000">1.0</font><font color="4444FF">)</font><font color="4444FF">;</font>
  <font color="#2040a0">hammingWindowing</font><font color="4444FF">(</font><font color="#2040a0">N</font>,<font color="#2040a0">tempMatrix</font><font color="4444FF">)</font><font color="4444FF">;</font>
  <font color="#2040a0">frameAdvanceReverse</font><font color="4444FF">(</font><font color="#2040a0">N</font>,<font color="#2040a0">advance</font>,<font color="#2040a0">tempMatrix</font>,<font color="#2040a0">winWeights</font><font color="4444FF">)</font><font color="4444FF">;</font>
  <font color="#2040a0">gsl_matrix_div_elements</font><font color="4444FF">(</font><font color="#2040a0">output</font>,<font color="#2040a0">winWeights</font><font color="4444FF">)</font><font color="4444FF">;</font>
 
  <font color="#444444">/* Free up allocated memory */</font>
  <font color="#2040a0">gsl_matrix_free</font><font color="4444FF">(</font><font color="#2040a0">tempMatrix</font><font color="4444FF">)</font><font color="4444FF">;</font>
  <font color="#2040a0">gsl_matrix_free</font><font color="4444FF">(</font><font color="#2040a0">winWeights</font><font color="4444FF">)</font><font color="4444FF">;</font>

<font color="4444FF"><strong>}</strong></font>

</pre>
<hr>
syntax highlighted by <a href="http://www.palfrader.org/code2html">Code2HTML</a>, v. 0.9.1
</body>
</html>
